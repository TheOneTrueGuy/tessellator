# pip install openai
# pip install graphviz


import openai
import json
from graphviz import Digraph

# Set up OpenAI API key
openai.api_key = "YOUR_OPENAI_API_KEY"
openai.api_base = "http://localhost:1234/v1"

def prompt_lm(prompt):
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=prompt,
        max_tokens=100,
        n=3,
        stop=None,
        temperature=0.7,
    )
    return [choice.text.strip() for choice in response.choices]

def generate_graph():
    initial_subject = "Artificial Intelligence"
    opposite_subject = prompt_lm(f"Suggest an idea that contrasts or opposes the concept of {initial_subject}")[0]

    subject_queue = [initial_subject, opposite_subject]
    graph = Digraph()
    graph.node(initial_subject)
    graph.node(opposite_subject)
    graph.edge(initial_subject, opposite_subject)

    while subject_queue:
        current_subject_a, current_subject_b = subject_queue.pop(0), subject_queue.pop(0)
        prompt = f"Suggest ideas that are perpendicular to the axis formed by '{current_subject_a}' and '{current_subject_b}'"
        new_subjects = prompt_lm(prompt)
        perpendicular_subjects = [s for s in new_subjects if s not in graph.body]
        subject_queue.extend(perpendicular_subjects)
        for new_subject in perpendicular_subjects:
            graph.node(new_subject)
            graph.edge(current_subject_a, new_subject)
            graph.edge(current_subject_b, new_subject)

    return graph

# Generate the graph
graph = generate_graph()

# Save graph as a text file
with open("concept_graph.txt", "w", encoding="utf-8") as f:
    f.write(str(graph))

# Save graph as a JSON object
graph_json = json.loads(graph.source)
with open("concept_graph.json", "w", encoding="utf-8") as f:
    json.dump(graph_json, f, indent=2)